Scripts used for phase-oscillator simulations relying on L and D functions 
derived from KaiC phosphorylation data (Fig. 3E-F, Fig. 4-figSup2(B))
**************************************************************************

To generate bootstrapped L and D functions from KaiC phosphorylation data
******************************************
1. Run globalFit_steps_NonParamBoot.m with NUMBOOT=no. bootstrapped datasets  you'd like to generate and derive L and D funs from. Set TOSAVESTEPFUNS=1 to save the output into a timestamped .mat file. One such output file is provided in saved_data/2017-06-05_stepFun_JuneFit_updFitPipe_wideLinFit1000_15.49.50.mat file.

To plot distribution of bootstrapped L and D functions (Fig. 3(E-F))
******************************************************
1. Run plotNoisyLDfuns_NonParamBoot.m

To run simulations from bootstrapped L and D functions
******************
1. Open runPhOsc_Boot_LinNLin.m and enter appropriate parameters to 
drive the phase oscillator for specific day lengths, number of 
light-dark cycles, and driving periods (default=24 hrs).
2. In the INDIR and INFILE fields, enter the file name and directory of the 
file containing step-response functions you want to use in simulations. 
These are typically previously generated by globalFit_steps_NonParamBoot.m 
and saved into a .mat file. An example file with 1000 bootstrapped sets of 
L, D, Llin, Dlin, Tlight and Tdark is provided in 
saved_data/2017-06-05_stepFun_JuneFit_updFitPipe_wideLinFit1000_15.49.50.mat file.
3. Hit run. Once complete, the program will generate a time-stamped file
TIMESTAMP_Lin.mat and TIMESTAMP_NonLin.mat files
that will contain your simulation results. The program will also save a 
timestamped version of the simulation script.

To plot simulation results in Fig. 4-figSup2(B) 
**************************
1. Open analyzePhOsc_Sims_Boot_LinNLin.m and enter the file names of the 
simulation datasets you want to process (generated by runPhOsc_BootLinNlin.m 
above). Examples of such datasets using both non-linear and linearized L 
and D are provided in saved_data/2017-06-05_16.05.25_NPB_1000.mat and 
saved_data/2017-06-05_16.10.51_NPB_Lin_1000.mat.
2. Hit run -- this will generate the figure depicting entrained phases as a
function of day length.

Example simulation output files and figures
*******************************************
Timestamped simulation scripts and corresponding simulation output files 
are provided in saved_data/ subfolder.
The saved_data/ subfolder also contains multiple .pdf files, including fits
to normalized KaiC phosphorylation traces, step functions derived from the 
bootstrapping analysis described in Computational Methods, as well as 
simulation outputs.

To illustrate phase oscillator trajectories during entrainment (Mathematical Appendix)
*******************************************
1. To generate panel C, run drivePhaseOscilStepFn_WithBoot_Illustration.m
script. It is easiest to do so in TEST mode, which can be selected by 
setting TOTEST=1. Enter the location of the file with the bootstrapped L and D
functions you would like to use. An example file is provided in saved_data/
(see above). Choose a specific bootstrapped L and D pair by setting BOOTNUM.
Then set simulation parameters in lines 36-40 (driving period, day length, 
number of light-dark cycles). 
2. Run the script -- this will generate the illustration as in panel C.


To illustrate phase oscillator trajectories in response to a single dark pulse (Mathematical Appendix)
*******************************************
1. To generate panel D, run drivePhaseOscilStepFn_WithBoot_PRC_Illustration.m
script. It is easiest to do so in TEST mode, which can be selected by 
setting TOTEST=1. Enter the location of the file with the bootstrapped L and D
functions you would like to use. An example file is provided in saved_data/
(see above). Choose a specific bootstrapped L and D pair by setting BOOTNUM.
Then set simulation parameters in lines 40-43 (dark pulse time and duration,
as well as duation of simulation). 
2. Run the script -- this will generate the illustration as in panel D.
